{"version":3,"sources":["jsx/01-sections/HeaderSection.jsx","redux/types.js","jsx/02-components/DayComponent.jsx","redux/actions.js","jsx/01-sections/DaysSection.jsx","jsx/02-components/InputComponent.jsx","jsx/02-components/TaskComponent.jsx","jsx/01-sections/TasksSection.jsx","jsx/01-sections/FormSection.jsx","redux/initialState.js","redux/reducers.js","redux/store.js","jsx/App.jsx","index.js"],"names":["HeaderSection","className","CREATE_TASK","READ_TASK","UPDATE_TASK","DELETE_TASK","DayComponent","id","title","active","tasks","dispatch","useDispatch","onClick","type","payload","READ_TASK_ACTION","length","DaysSection","days","useSelector","state","tasksReducer","useState","isDaysVisible","setIsDaysVisible","map","day","InputComponent","oldTitle","setTitle","editable","setEditable","value","onChange","e","target","onBlur","onKeyUp","defaultValue","onFocus","TaskComponent","tasksByHour","sort","a","b","hour","deleteTask","preventDefault","DELETE_TASK_ACTION","task","onSubmit","viewBox","fill","d","TasksSection","FormSection","setTask","setHour","isFormVisible","setIsFormVisible","filter","hourNumber","parseInt","CREATE_TASK_ACTION","htmlFor","min","max","placeholder","initialState","uuidv4","rootReducers","combineReducers","action","newId","pTasks","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","subscribe","setItem","stringify","getState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5d7b126.chunk.js","sourcesContent":["const HeaderSection = () => {\r\n    return(\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Minimal <span>Plan</span>ner</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport { HeaderSection }","const CREATE_TASK = 'CREATE_TASK'\r\nconst READ_TASK = 'READ_TASK'\r\nconst UPDATE_TASK = 'UPDATE_TASK'\r\nconst DELETE_TASK = 'DELETE_TASK'\r\n\r\nexport { \r\n    CREATE_TASK,\r\n    READ_TASK,\r\n    UPDATE_TASK, \r\n    DELETE_TASK \r\n}","import { useDispatch } from 'react-redux'\r\nimport { READ_TASK_ACTION } from '../../redux/actions'\r\n\r\nconst DayComponent = ({id, title, active, tasks}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    return(\r\n        <a className={`day ${active && 'day--active'}`} key={id} id={id} onClick = {()=> dispatch( READ_TASK_ACTION(id) )}>\r\n            <h3 className=\"day__title\">{title}</h3>\r\n            <span className=\"day__tasks\">{tasks.length}</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default DayComponent","import { \r\n    CREATE_TASK,\r\n    READ_TASK,\r\n    UPDATE_TASK, \r\n    DELETE_TASK \r\n} from './types'\r\n\r\nconst CREATE_TASK_ACTION = (task) => ({\r\n    type: CREATE_TASK,\r\n    payload: task\r\n})\r\n\r\nconst READ_TASK_ACTION = (id) => ({\r\n    type: READ_TASK,\r\n    payload: id\r\n})\r\n\r\nconst UPDATE_TASK_ACTION = (task) => ({\r\n    type: UPDATE_TASK,\r\n    payload: task\r\n})\r\n\r\nconst DELETE_TASK_ACTION = (id) =>({\r\n    type: DELETE_TASK,\r\n    payload: id\r\n})\r\n\r\nexport{\r\n    CREATE_TASK_ACTION,\r\n    READ_TASK_ACTION,\r\n    UPDATE_TASK_ACTION,\r\n    DELETE_TASK_ACTION\r\n}","import DayComponent from '../02-components/DayComponent'\r\nimport { useSelector } from 'react-redux'\r\nimport { useState } from \"react\"\r\n\r\nconst DaysSection = () => {\r\n\r\n    const days = useSelector( state => state.tasksReducer.days )\r\n    const [isDaysVisible, setIsDaysVisible] = useState(false)\r\n\r\n    return(\r\n        <aside className={`days ${isDaysVisible && 'is-days-visible'}`}>\r\n            <div className=\"days__trigger\" onClick={()=>setIsDaysVisible(!isDaysVisible)}>+</div>\r\n            <div className=\"days__list\">\r\n                {\r\n                    days.map( day => (\r\n                        <DayComponent \r\n                            key={day.id}\r\n                            id={day.id}\r\n                            title={day.title}\r\n                            active={day.active}\r\n                            tasks={day.tasks}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\n\r\nexport default DaysSection","import { useState } from \"react\"\r\nimport { useDispatch } from 'react-redux'\r\nimport { UPDATE_TASK_ACTION } from '../../redux/actions'\r\n\r\nconst InputComponent = ({oldTitle,id,day}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [ title, setTitle ] = useState(oldTitle)\r\n    const [ editable, setEditable ] = useState(false)\r\n\r\n    return(\r\n        <>\r\n            {\r\n                !editable ? \r\n                <input className=\"task__title\" \r\n                    defaultValue={ title } \r\n                    onFocus={ ()=>setEditable(!editable) } \r\n                /> \r\n                :\r\n                <input className=\"task__title task__title2\" \r\n                    value = { title }\r\n                    onChange={ (e)=>setTitle(e.target.value) }\r\n                    onBlur={ ()=>setEditable(!editable) } \r\n                    onKeyUp = { ()=> dispatch( UPDATE_TASK_ACTION({day, id, title}) ) }\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport { InputComponent }","import { useDispatch } from 'react-redux'\r\nimport { DELETE_TASK_ACTION } from '../../redux/actions'\r\nimport { InputComponent } from './InputComponent'\r\n\r\nconst TaskComponent = ({day, tasks, active}) => {\r\n    const dispatch = useDispatch()\r\n    const tasksByHour = tasks\r\n    tasksByHour.sort((a,b) => a.hour - b.hour)\r\n\r\n    const deleteTask = (e, id) => {\r\n        e.preventDefault()\r\n        dispatch( DELETE_TASK_ACTION({ day, id }) )\r\n    }\r\n\r\n    return(\r\n\r\n        active && \r\n        <div className=\"tasks__list\">\r\n            {\r\n               tasksByHour.map( task => (\r\n\r\n                    <form className=\"task\" key={task.id} onSubmit={(e)=>deleteTask(e, task.id)}>\r\n                        <div className=\"task__schedule\">\r\n                            <span className=\"task__schedule-hour\">{task.hour < 10 ? `0${task.hour}`: task.hour}:00 hr</span>\r\n                        </div>\r\n                       \r\n                        <InputComponent \r\n                            oldTitle={task.title}\r\n                            editable={task.editable}\r\n                            day={day}\r\n                            id={task.id}\r\n                        />\r\n\r\n                        <button className=\"task__submit\" type=\"submit\" title=\"Delete task\">\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                                <path fill=\"none\" d=\"M15.898,4.045c-0.271-0.272-0.713-0.272-0.986,0l-4.71,4.711L5.493,4.045c-0.272-0.272-0.714-0.272-0.986,0s-0.272,0.714,0,0.986l4.709,4.711l-4.71,4.711c-0.272,0.271-0.272,0.713,0,0.986c0.136,0.136,0.314,0.203,0.492,0.203c0.179,0,0.357-0.067,0.493-0.203l4.711-4.711l4.71,4.711c0.137,0.136,0.314,0.203,0.494,0.203c0.178,0,0.355-0.067,0.492-0.203c0.273-0.273,0.273-0.715,0-0.986l-4.711-4.711l4.711-4.711C16.172,4.759,16.172,4.317,15.898,4.045z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </form>\r\n                ))\r\n            \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { TaskComponent }","import { TaskComponent } from '../02-components/TaskComponent'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst TasksSection = () => {\r\n    \r\n    const days = useSelector( state => state.tasksReducer.days )\r\n    \r\n    return(\r\n        <section className=\"tasks\" >\r\n            <div className=\"tasks__blur\"></div>\r\n            { \r\n                days.map( day => <TaskComponent \r\n                                    key={day.id} \r\n                                    day={day.id} \r\n                                    tasks={day.tasks} \r\n                                    active={day.active}\r\n                /> ) \r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default TasksSection","import { useState } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { CREATE_TASK_ACTION } from \"../../redux/actions\"\r\n\r\nconst FormSection = () => {\r\n    const dispatch = useDispatch()\r\n    const days = useSelector( state => state.tasksReducer.days )\r\n\r\n    const [task, setTask] = useState('')\r\n    const [hour, setHour] = useState('')\r\n    const [isFormVisible, setIsFormVisible] = useState(false)\r\n\r\n    const sendForm = (e) => {\r\n        e.preventDefault()\r\n\r\n        let day = days.filter( d => {\r\n            if(d.active === true){\r\n                return d\r\n            }\r\n        })\r\n\r\n        if(task !== '' && hour !== ''){\r\n            let hourNumber = parseInt(hour)\r\n\r\n            dispatch( CREATE_TASK_ACTION({ task, hourNumber, day: day[0].id }))\r\n            setTask('')\r\n            setHour('')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form className={`task-form ${!isFormVisible && 'is-taskform-visible'}`} onSubmit={ sendForm }>\r\n            <div className=\"task-form__trigger\" onClick={()=>setIsFormVisible(!isFormVisible)}>+</div>\r\n            <div className=\"task-form__schedule\">\r\n                <label className=\"task-form__schedule-label\" htmlFor=\"task-form__schedule-hour\">Hour (24hrs)</label>\r\n                <input type=\"number\" min=\"0\" max=\"23\" className=\"task-form__schedule-hour\" id=\"task-form__schedule-hour\" value={hour} onChange={ (e)=>setHour(e.target.value)}></input>\r\n            </div>\r\n            <input type=\"input\" className=\"task-form__title\" placeholder=\"New task\" value={task} onChange={ (e)=>setTask(e.target.value)}></input>\r\n            <button type=\"submit\" className=\"task-form__submit\" >Create task</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport { FormSection }","import { v4 as uuidv4 } from 'uuid';\r\n\r\nconst initialState = {\r\n    days: [\r\n        {\r\n            id: 1,\r\n            title: 'monday',\r\n            active: true,\r\n            tasks: [\r\n                {\r\n                    id: uuidv4(),\r\n                    title: 'Learn how to code',\r\n                    hour: 18,\r\n                    editable: false\r\n                },\r\n                {\r\n                    id: uuidv4(),\r\n                    title: 'Eat pizza',\r\n                    hour: 10,\r\n                    editable: false\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'tuesday',\r\n            active: false,\r\n            tasks: []\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'wednesday',\r\n            active: false,\r\n            tasks: []\r\n\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'thursday',\r\n            active: false,\r\n            tasks: []\r\n\r\n        },\r\n        {\r\n            id: 5,\r\n            title: 'friday',\r\n            active: false,\r\n            tasks: []\r\n\r\n        },\r\n        {\r\n            id: 6,\r\n            title: 'saturday',\r\n            active: false,\r\n            tasks: []\r\n\r\n        },\r\n        {\r\n            id: 7,\r\n            title: 'sunday',\r\n            active: false,\r\n            tasks: []\r\n\r\n        }\r\n    ],\r\n}\r\n\r\nexport { initialState }","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { initialState } from './initialState'\r\nimport { combineReducers } from 'redux'\r\nimport { \r\n    CREATE_TASK,\r\n    READ_TASK,\r\n    UPDATE_TASK, \r\n    DELETE_TASK \r\n} from './types'\r\n\r\n\r\nconst tasksReducer = ( state = initialState , action ) => {\r\n\r\n    switch(action.type){\r\n\r\n        case CREATE_TASK:\r\n            let newId = uuidv4()\r\n            return{\r\n                ...state,\r\n                days: state.days.map( day => {\r\n                    if(day.id === action.payload.day){\r\n                        return{\r\n                            ...day,\r\n                            tasks: [\r\n                                ...day.tasks,\r\n                                {\r\n                                    id: newId,\r\n                                    title: action.payload.task,\r\n                                    hour: action.payload.hourNumber,\r\n                                }\r\n                            ]\r\n                           \r\n                        }\r\n                    }\r\n                    return day\r\n                })\r\n            }\r\n\r\n        case READ_TASK:\r\n            return {\r\n                ...state,\r\n                days: state.days.map( day => {\r\n                    if(day.id !== action.payload){\r\n                        return{\r\n                            ...day,\r\n                            active: false\r\n                        }\r\n                    }\r\n                    else{\r\n                        return{\r\n                            ...day,\r\n                            active: true\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                days: state.days.map( day => {\r\n                    if(day.id === action.payload.day){\r\n                        return{\r\n                            ...day,\r\n                            tasks: day.tasks.filter( task => task.id !== action.payload.id )\r\n                        }\r\n                    }\r\n                    return day\r\n                })\r\n            }\r\n\r\n        case UPDATE_TASK:\r\n            return{\r\n                ...state,\r\n                days: state.days.map( day => {\r\n                    if(day.id === action.payload.day){\r\n                        return{\r\n                            ...day,\r\n                            tasks: [\r\n                                ...day.tasks.map( task => {\r\n                                    if(task.id === action.payload.id){\r\n                                        return{\r\n                                            ...task,\r\n                                            title: action.payload.title\r\n                                        }\r\n                                    }\r\n                                    return task\r\n                                })\r\n                            ]\r\n                        }\r\n                    }\r\n                    return day\r\n                })\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst rootReducers = combineReducers({\r\n    tasksReducer\r\n})\r\n\r\n\r\nexport { rootReducers }\r\n\r\n","import { initialState } from './initialState'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { rootReducers } from './reducers'\r\nimport { createStore } from 'redux'\r\n\r\nconst pTasks = localStorage.getItem('p-tasks') ? JSON.parse(localStorage.getItem('p-tasks')) : initialState\r\n\r\nconst store = createStore(\r\n    rootReducers,\r\n    pTasks,\r\n    composeWithDevTools()\r\n)\r\n\r\nstore.subscribe(()=>{\r\n    localStorage.setItem('p-tasks', JSON.stringify( store.getState()) )\r\n})\r\n\r\n\r\nexport default store","import { HeaderSection } from './01-sections/HeaderSection'\nimport DaysSection from './01-sections/DaysSection'\nimport TasksSection from './01-sections/TasksSection'\nimport { FormSection } from './01-sections/FormSection'\nimport { Provider } from 'react-redux'\nimport store from '../redux/store.js'\n\nconst App = () => {\n\treturn(\n\t\t<Provider store={store} >\n\t\t\t<div className=\"planner\">\n\t\t\t\t<HeaderSection></HeaderSection>\n\t\t\t\t<DaysSection></DaysSection>\n\t\t\t\t<TasksSection></TasksSection>\n\t\t\t\t<FormSection></FormSection>\n\t\t\t</div>\n\t\t</Provider>\n\t)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './jsx/App';\nimport './scss/styles.scss';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}